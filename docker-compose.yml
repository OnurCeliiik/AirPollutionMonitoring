services:
  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - ingest
      - notifier
    environment:
      - NODE_ENV=production
      - REACT_APP_MAPBOX_TOKEN=pk.eyJ1Ijoib251ci1jZWxpayIsImEiOiJjbWFiMGVueHcxcWFxMnFzNnd0dXNlYXN5In0.NS_SeQ734d4oHrhe9yFwdw
      - REACT_APP_API_URL=http://localhost:8082
      - REACT_APP_WS_URL=ws://localhost:8081/ws/alerts
    networks:
      - air-quality-network

  # Import backend services from the backend docker-compose file
  ingest:
    extends:
      file: ./backend/docker-compose.yml
      service: ingest
    networks:
      - air-quality-network

  processor:
    extends:
      file: ./backend/docker-compose.yml
      service: processor
    networks:
      - air-quality-network

  notifier:
    extends:
      file: ./backend/docker-compose.yml
      service: notifier
    networks:
      - air-quality-network

  # Include the backend dependencies
  timescaledb:
    extends:
      file: ./backend/docker-compose.yml
      service: timescaledb
    networks:
      - air-quality-network

  zookeeper:
    extends:
      file: ./backend/docker-compose.yml
      service: zookeeper
    networks:
      - air-quality-network

  kafka:
    extends:
      file: ./backend/docker-compose.yml
      service: kafka
    networks:
      - air-quality-network

networks:
  air-quality-network:
    driver: bridge

volumes:
  timescaledb_data: 